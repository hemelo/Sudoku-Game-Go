package components

func getButtonColorClasses(color string) string {
    switch color {
    case "primary":
        return "bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
    case "secondary":
        return "bg-gray-700 hover:bg-gray-800 focus:ring-4 focus:outline-none focus:ring-gray-300 dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
    case "success":
        return "bg-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"
    case "danger":
        return "bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800"
    case "warning":
        return "bg-yellow-600 hover:bg-yellow-800 focus:ring-4 focus:outline-none focus:ring-yellow-300 dark:bg-yellow-600 dark:hover:bg-yellow-700 dark:focus:ring-yellow-800"
    case "info":
        return "bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
    case "light":
        return "bg-gray-300 hover:bg-gray-400 focus:ring-4 focus:outline-none focus:ring-gray-500 dark:bg-gray-700 dark:hover:bg-gray-800 dark:focus:ring-gray-900"
    case "dark":
        return "bg-gray-800 hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-500 dark:bg-gray-300 dark:hover:bg-gray-400 dark:focus:ring-gray-500"
    default:
        return "bg-indigo-700 hover:bg-indigo-800 focus:ring-4 focus:outline-none focus:ring-indigo-300 dark:bg-indigo-600 dark:hover:bg-indigo-700 dark:focus:ring-indigo-800"
    }
}

type ButtonData struct {
    Color           string
    Label           string
    LabelPosition   string
    Icon            templ.Component
}

templ Button(buttonData ButtonData) {
    <button type="button" class={ "gap-2 text-white focus:ring-4 focus:outline-none font-medium rounded-full text-sm p-2.5 text-center flex items-center transition-all " + getButtonColorClasses(buttonData.Color)}>
        if buttonData.LabelPosition == "left" {
            <span> { buttonData.Label }</span>
        }
        if buttonData.Icon != nil {
            @buttonData.Icon
        }
        if buttonData.LabelPosition == "right" {
            <span> { buttonData.Label }</span>
        }
        <span class="sr-only"> { buttonData.Label }</span>
    </button>
}